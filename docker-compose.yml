version: "3.9"

services:
  app:
    build: .
    container_name: mp_app
    ports:
      - "8080:8080" # HTTP API
      - "9000:9000" # Metrics
    depends_on:
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_started
    env_file:
      - .env
    volumes:
      - ./.env:/app/.env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - marketplace_network

  postgres:
    image: postgres:17-alpine
    container_name: mp_postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - marketplace_network

  prometheus:
    image: prom/prometheus:v3.3.0
    container_name: mp_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - marketplace_network

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  marketplace_network:
    driver: bridge
